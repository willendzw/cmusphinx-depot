-----------------------------------------------------------

Phoenix: Semantic frame parser

-----------------------------------------------------------

Copyright 2002 All rights reserved

Center for Spoken Language Research (CSLR)
University of Colorado at Boulder
http: cslr.colorado.edu


Reference
---------

Ward, W. H.,  "The Phoenix System: Understanding Spontaneous Speech",  IEEE ICASSP, April 1991

and 

Ward, W.,  "Extracting Information From Spontaneous Speech" International Conference on Spoken Language Processing, September 1994.


Files
-----

README         this file

Doc		- pdf and ascii versions of Phoenix User Manual
Example		- Tutorial example for compiling and running grammars
Grammars	- Library of common grammars
ParserLib	- Source Code for parser

  makefile		- Unix makefile

  compile_grammar.c 	- Grammar compiler
  concept_leaf.c	- Flag leaf nodes for extracted form
  dict.c		- Routines to read dictionary and look up words
  grammar.c		- Routines to read frame and grammar structures
  match.c		- The match search
  nfa_to_dfa.c		- Program to convert the RTN graphs to trees
  parse.c		- Entry point for parse() function
  parse_text.c		- Stdin/stdout interface to parser
  pconf.c		- Functions to handle command line args
  print_structs.c	- Functions to print the parsed structures


  functions.h		- Function declarations
  globals_gram.h
  globals_parse.h	- Global varaibles used by the parser
  grammar.h
  lengths.h		- Standard size definitions
  parse.h
  pconf.h

Scripts		- Some perl utility scripts
Server		- C code to implement as a Galaxy parse server


Compiling
---------

Has been tested on a Unix platform (Red-Hat Linux 6.2)

To compile and link:

1. cd ParserLib
2. gmake

This will compile all routines and create the programs:
compile_grammar
concept_leaf
nfa_to_dfa
parse_text

Usage
-----

compile_grammar -f <grammar_file>
	<grammar_file> should have .gra extension. compile_grammar
	creates a corresponding .net file

concept_leaf -grammar <compiled_grammar_file>
	<compiled_grammar_file> is a .net file generated by compile_grammar
	concept_leaf tags this file so that extracted form printing will work.

nfa_to_dfa <net_file_name>
	.net files as generated by compile_grammar are non-deterministic
        graphs. This is a very efficient representation, but doesn't keep
        histories separate for training probabilities for arcs. If you
	want to keep separate histories (and not re-merge paths) in
	calculating arc probabilities, then use nfa_to_dfa to process
	the non-deterministic graph into a deterministic tree structure.
 
parse_text -dir <directory containing grammar> -grammar <grammar_file>
	Accepts input from stdin and write to stdout. Parses typed
	input using specified grammar.
